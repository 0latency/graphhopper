####################
##### Vehicles #####
# Possible options: car,foot,bike,bike2,mtb,racingbike,motorcycle (comma separated)
# When using two or three option together set "prepare.chWeighting=no" - see below
# bike2 takes elevation data into account (like up-hill is slower than down-hill)
# and requires enabling graph.elevation.provider below, e.g. see #169
graph.flagEncoders=car

# to enable turn restrictions for car do
# graph.flagEncoders=car|turnCosts=true



##### Elevation #####
# To populate your graph with elevation data use SRTM, default is noop
# graph.elevation.provider=srtm
#
# default location for cache is used /tmp/srtm
# graph.elevation.cachedir=./srtmprovider/
#
# If you have a slow disk or plenty of RAM change the default MMAP to
# graph.elevation.dataaccess=RAM_STORE



##### Storage #####
# configure the memory access, use RAM_STORE for well equipped servers
# MMAP_STORE_SYNC could be used otherwise but will be a lot slower
graph.dataaccess=RAM_STORE

# if you want to reduce storage size and you don't need instructions for a path uncomment this
# osmreader.instructions=false

# Default: use contraction hierarchies to speed things up. requires more RAM/disc space for holding the graph
prepare.chWeighting=fastest



##### Web #####
# if you want to support jsonp response type you need to add it explicitely here:
#web.jsonpAllowed=true
